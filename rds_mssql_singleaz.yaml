AWSTemplateFormatVersion: '2010-09-09'
Description: Creates an empty SQL Server RDS database as an example for automated deployments.
Parameters:
  SqlServerInstanceName:
    NoEcho: 'false'
    Description: RDS SQL Server Instance Name
    Type: String
    Default: SqlRdsDB
    MinLength: '1'
    MaxLength: '63'
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
  SqlServerInstanceType:
    Type: String
    Default: db.m4.large
    Description: The approved RDS Instance Type.
    AllowedValues:
    - db.m4.large
    - db.m4.2xlarge
    - db.m4.4xlarge
    - db.r4.large
    - db.r4.2xlarge
    - db.r4.4xlarge
  SqlServerDBSize:
     Type: Number
     ConstraintDescription: must contain a number between 100 and 2000.
     Default: 500
     MinValue: 100
     MaxValue: 2000
     Description: The total Database Capacity, including logs, indexes, etc. (GB)
  DatabaseUsername:
    AllowedPattern: "[a-zA-Z0-9]+"
    ConstraintDescription: must contain only alphanumeric characters.
    Description: The database admin account user name.
    MaxLength: '16'
    MinLength: '1'
    Type: String
  DatabasePassword:
    AllowedPattern: "^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)"
    ConstraintDescription: Must contain only alphanumeric characters with at least one capital letter and one number.
    Description: The database admin account password.
    MaxLength: '41'
    MinLength: '8'
    NoEcho: 'true'
    Type: String
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: SQL Instance name, SQL Instance type, DB Size, master username and password
      Parameters:
        - SqlServerInstanceName
        - SqlServerInstanceType
        - SqlServerDBSize
        - DatabaseUsername
        - DatabasePassword
      ParameterLabels:
        SqlServerInstanceName:
            default: Instance name
        SqlServerInstanceType:
            default: db.m4.large
        SqlServerDBSize:
            default: 500
        DatabaseUsername:
            default: Master user name
        DatabasePassword:
            default: Password
Resources:
  RDSDBSubnetGroup: 
    Type: "AWS::RDS::DBSubnetGroup"
    Properties: 
      DBSubnetGroupDescription: "description"
      SubnetIds: 
        - "subnet-0c3cf344dc87ce4d0"
        - "subnet-0bf92e90420596a23"
  SQLServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SQL Server Security Group
      VpcId:  vpc-02fed27515c2b1482
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '1433'
        ToPort: '1433'
        CidrIp: 204.61.56.0/0
  SQLDatabase:
    Type: AWS::RDS::DBInstance
    Properties:
      VPCSecurityGroups:
      - Fn::GetAtt:
        - SQLServerSecurityGroup
        - GroupId
      DBSubnetGroupName:
        Ref: RDSDBSubnetGroup
      DBInstanceIdentifier:
        Ref: SqlServerInstanceName
      LicenseModel: license-included
      Engine: sqlserver-se
      EngineVersion: 12.00.4422.0.v1
      MultiAZ: false
      DBInstanceClass:
        Ref: SqlServerInstanceType
      AllocatedStorage:
        Ref: SqlServerDBSize
      MasterUsername:
        Ref: DatabaseUsername
      MasterUserPassword:
        Ref: DatabasePassword
      PubliclyAccessible: 'false'
      Tags:
        -
          Key: "Name"
          Value: "sqlmaster"
        -
          Key: "project"
          Value: "development unittest"
      BackupRetentionPeriod: '1'
    DependsOn: SQLServerSecurityGroup
Outputs:
   SQLDatabaseEndpoint:
     Description: Database endpoint
     Value: !Sub "${SQLDatabase.Endpoint.Address}:${SQLDatabase.Endpoint.Port}"